class Solution {
public:
    /**
     * @param nums: A list of integers.
     * @return: A list of unique permutations.
     */
    vector<vector<int> > permuteUnique(vector<int> &nums) {
        // write your code here
        if(nums.empty())
            return {{}};
        set<vector<int>> mp;
        permutation(nums,0,mp);
        return vector<vector<int>> (mp.begin(),mp.end());
    }
    
    void permutation(vector<int> &nums, int index, set<vector<int>> &mp){
        if(index >= nums.size() - 1){
            mp.insert(nums);
            return ;
        }
        for(int i = index ; i < nums.size() ; ++i){
            swap(nums[i], nums[index]);
            permutation(nums, index + 1, mp);
            swap(nums[i], nums[index]);
        }
    }
};
